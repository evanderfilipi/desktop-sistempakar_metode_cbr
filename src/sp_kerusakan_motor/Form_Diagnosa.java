/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sp_kerusakan_motor;

import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Evander Filipi
 */
public class Form_Diagnosa extends javax.swing.JFrame {
    
    private Form_Rincian_Diagnosa formrinci = new Form_Rincian_Diagnosa();
    String g1,g2,g3,g4,g5,g6,g7,g8,g9,g10,g11,g12,g13,g14,g15,g16,g17,g18,g19,g20,g21,g22,g23,g24,g25,g26,g27,g28,g29,g30,g31,g32,g33,g34,g35,g36,g37,g38,g39,g40,g41,g42,g43,g44,g45,g46,g47,g48,g49,g50;
    String kd_kerusakan = "";
    String nama_kerusakan = "";
    String deskripsi = "";
    String solusi = "";
    String persen = "";
    DefaultTableModel model, model2;
    JTable table, tables;
    private WindowAdapter windowAdapter = null;
    
    public void initFrame(){
        this.windowAdapter = new WindowAdapter(){
            public void windowClosing(WindowEvent e){
                super.windowClosing(e);
                formrinci.dispose();
            }
            public void windowClosed (WindowEvent e){
                super.windowClosed(e);
                formrinci.dispose();
            }
            
        };
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.addWindowListener(this.windowAdapter);
    }
    
    private void getDataGejala() {
        model2 = new DefaultTableModel(){
          public Class <?> getColumnClass(int column){
              switch(column){
                  case 0:
                      return Boolean.class;
                  case 1:
                      return String.class;
                  case 2:
                      return String.class;
                  default:
                      return String.class;
              }
          }
        };
        gejalaTbl.setModel(model2);
        model2.addColumn("Pilih Gejala (Checklist)");
        model2.addColumn("Kode Gejala");
        model2.addColumn("Nama Gejala");
        int countrow = 0;
        try {
            java.sql.Connection conn = (java.sql.Connection)Koneksi_DB.getConnection();
            java.sql.Statement st = conn.createStatement();
            java.sql.ResultSet sq = st.executeQuery("SELECT COUNT(kd_gejala) AS row_gejala FROM tb_gejala");
            if(sq.next()){
                countrow = sq.getInt("row_gejala");
            }
            
            for(int b=0; b<50; b++){
                model2.addRow(new Object[0]);
                model2.setValueAt(false, b, 0);
                java.sql.Statement stm = conn.createStatement();
                java.sql.ResultSet sql = stm.executeQuery("SELECT * FROM tb_gejala LIMIT "+b+",1");
                while(sql.next()){
                    model2.setValueAt(sql.getString("kd_gejala"), b, 1);
                    model2.setValueAt(sql.getString("nama_gejala"), b, 2);
                }
            }
            for(int c=countrow; c<50; c++){
                model2.setValueAt("", c, 1);
                model2.setValueAt("", c, 2);
            }
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, "Tidak dapat terhubung ke database. Pastikan Xampp sudah aktif!","Pemberitahuan",JOptionPane.INFORMATION_MESSAGE);
        }
    }
    
    private void rinci() {
        if(kd_kerusakan.equals("")) {
            rincianBtn.setEnabled(false);
        } else {
            rincianBtn.setEnabled(true);
        }
    }

    /**
     * Creates new form Form_Diagnosa
     */
    public Form_Diagnosa() {
        initComponents();
        getDataGejala();
        rinci();
        initFrame();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        gejalaTbl = new javax.swing.JTable();
        refreshBtn = new javax.swing.JButton();
        diagnosaBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        diagnosaTbl = new javax.swing.JTable();
        rincianBtn = new javax.swing.JButton();
        clearAllBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Form Diagnosa");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Pilih Gejala"));

        gejalaTbl.setBackground(new java.awt.Color(204, 204, 204));
        gejalaTbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        gejalaTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Pilih", "Kode Gejala", "Nama Gejala"
            }
        ));
        gejalaTbl.setGridColor(new java.awt.Color(255, 255, 255));
        gejalaTbl.setRowHeight(24);
        gejalaTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gejalaTblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(gejalaTbl);

        refreshBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        refreshBtn.setText("REFRESH");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        diagnosaBtn.setBackground(new java.awt.Color(255, 0, 0));
        diagnosaBtn.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        diagnosaBtn.setForeground(new java.awt.Color(255, 255, 255));
        diagnosaBtn.setText("DIAGNOSA");
        diagnosaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diagnosaBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(refreshBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(diagnosaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addComponent(diagnosaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(255, 153, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Hasil Diagnosa"));

        diagnosaTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Kode Kerusakan", "Nama Kerusakan", "Gejala Cocok", "Total Gejala", "Gejala Dipilih", "Nilai Pembagi", "Kemiripan Kasus"
            }
        ));
        diagnosaTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                diagnosaTblMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(diagnosaTbl);

        rincianBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rincianBtn.setText("LIHAT RINCIAN KERUSAKAN");
        rincianBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rincianBtnActionPerformed(evt);
            }
        });

        clearAllBtn.setBackground(new java.awt.Color(51, 255, 51));
        clearAllBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        clearAllBtn.setText("CLEAR ALL");
        clearAllBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearAllBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rincianBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(clearAllBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane3)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rincianBtn)
                    .addComponent(clearAllBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void gejalaTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gejalaTblMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_gejalaTblMouseClicked

    private void diagnosaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diagnosaBtnActionPerformed
        // TODO add your handling code here:
        int gejalanya = 0;
        Boolean cek1 = Boolean.valueOf(gejalaTbl.getValueAt(0, 0).toString());
        if(cek1){
            g1 = gejalaTbl.getValueAt(0, 1).toString();
            if (!g1.equals("")){
                gejalanya++;
            } else {}
        } else {
            g1 = "";
        }
        Boolean cek2 = Boolean.valueOf(gejalaTbl.getValueAt(1, 0).toString());
        if(cek2){
            g2 = gejalaTbl.getValueAt(1, 1).toString();
            if (!g2.equals("")){
                gejalanya++;
            } else {}
        } else {
            g2 = "";
        }
        Boolean cek3 = Boolean.valueOf(gejalaTbl.getValueAt(2, 0).toString());
        if(cek3){
            g3 = gejalaTbl.getValueAt(2, 1).toString();
            if (!g3.equals("")){
                gejalanya++;
            } else {}
        } else {
            g3 = "";
        }
        Boolean cek4 = Boolean.valueOf(gejalaTbl.getValueAt(3, 0).toString());
        if(cek4){
            g4 = gejalaTbl.getValueAt(3, 1).toString();
            if (!g4.equals("")){
                gejalanya++;
            } else {}
        } else {
            g4 = "";
        }
        Boolean cek5 = Boolean.valueOf(gejalaTbl.getValueAt(4, 0).toString());
        if(cek5){
            g5 = gejalaTbl.getValueAt(4, 1).toString();
            if (!g5.equals("")){
                gejalanya++;
            } else {}
        } else {
            g5 = "";
        }
        Boolean cek6 = Boolean.valueOf(gejalaTbl.getValueAt(5, 0).toString());
        if(cek6){
            g6 = gejalaTbl.getValueAt(5, 1).toString();
            if (!g6.equals("")){
                gejalanya++;
            } else {}
        } else {
            g6 = "";
        }
        Boolean cek7 = Boolean.valueOf(gejalaTbl.getValueAt(6, 0).toString());
        if(cek7){
            g7 = gejalaTbl.getValueAt(6, 1).toString();
            if (!g7.equals("")){
                gejalanya++;
            } else {}
        } else {
            g7 = "";
        }
        Boolean cek8 = Boolean.valueOf(gejalaTbl.getValueAt(7, 0).toString());
        if(cek8){
            g8 = gejalaTbl.getValueAt(7, 1).toString();
            if (!g8.equals("")){
                gejalanya++;
            } else {}
        } else {
            g8 = "";
        }
        Boolean cek9 = Boolean.valueOf(gejalaTbl.getValueAt(8, 0).toString());
        if(cek9){
            g9 = gejalaTbl.getValueAt(8, 1).toString();
            if (!g9.equals("")){
                gejalanya++;
            } else {}
        } else {
            g9 = "";
        }
        Boolean cek10 = Boolean.valueOf(gejalaTbl.getValueAt(9, 0).toString());
        if(cek10){
            g10 = gejalaTbl.getValueAt(9, 1).toString();
            if (!g10.equals("")){
                gejalanya++;
            } else {}
        } else {
            g10 = "";
        }
        Boolean cek11 = Boolean.valueOf(gejalaTbl.getValueAt(10, 0).toString());
        if(cek11){
            g11 = gejalaTbl.getValueAt(10, 1).toString();
            if (!g11.equals("")){
                gejalanya++;
            } else {}
        } else {
            g11 = "";
        }
        Boolean cek12 = Boolean.valueOf(gejalaTbl.getValueAt(11, 0).toString());
        if(cek12){
            g12 = gejalaTbl.getValueAt(11, 1).toString();
            if (!g12.equals("")){
                gejalanya++;
            } else {}
        } else {
            g12 = "";
        }
        Boolean cek13 = Boolean.valueOf(gejalaTbl.getValueAt(12, 0).toString());
        if(cek13){
            g13 = gejalaTbl.getValueAt(12, 1).toString();
            if (!g13.equals("")){
                gejalanya++;
            } else {}
        } else {
            g13 = "";
        }
        Boolean cek14 = Boolean.valueOf(gejalaTbl.getValueAt(13, 0).toString());
        if(cek14){
            g14 = gejalaTbl.getValueAt(13, 1).toString();
            if (!g14.equals("")){
                gejalanya++;
            } else {}
        } else {
            g14 = "";
        }
        Boolean cek15 = Boolean.valueOf(gejalaTbl.getValueAt(14, 0).toString());
        if(cek15){
            g15 = gejalaTbl.getValueAt(14, 1).toString();
            if (!g15.equals("")){
                gejalanya++;
            } else {}
        } else {
            g15 = "";
        }
        Boolean cek16 = Boolean.valueOf(gejalaTbl.getValueAt(15, 0).toString());
        if(cek16){
            g16 = gejalaTbl.getValueAt(15, 1).toString();
            if (!g16.equals("")){
                gejalanya++;
            } else {}
        } else {
            g16 = "";
        }
        Boolean cek17 = Boolean.valueOf(gejalaTbl.getValueAt(16, 0).toString());
        if(cek17){
            g17 = gejalaTbl.getValueAt(16, 1).toString();
            if (!g17.equals("")){
                gejalanya++;
            } else {}
        } else {
            g17 = "";
        }
        Boolean cek18 = Boolean.valueOf(gejalaTbl.getValueAt(17, 0).toString());
        if(cek18){
            g18 = gejalaTbl.getValueAt(17, 1).toString();
            if (!g18.equals("")){
                gejalanya++;
            } else {}
        } else {
            g18 = "";
        }
        Boolean cek19 = Boolean.valueOf(gejalaTbl.getValueAt(18, 0).toString());
        if(cek19){
            g19 = gejalaTbl.getValueAt(18, 1).toString();
            if (!g19.equals("")){
                gejalanya++;
            } else {}
        } else {
            g19 = "";
        }
        Boolean cek20 = Boolean.valueOf(gejalaTbl.getValueAt(19, 0).toString());
        if(cek20){
            g20 = gejalaTbl.getValueAt(19, 1).toString();
            if (!g20.equals("")){
                gejalanya++;
            } else {}
        } else {
            g20 = "";
        }
        Boolean cek21 = Boolean.valueOf(gejalaTbl.getValueAt(20, 0).toString());
        if(cek21){
            g21 = gejalaTbl.getValueAt(20, 1).toString();
            if (!g21.equals("")){
                gejalanya++;
            } else {}
        } else {
            g21 = "";
        }
        Boolean cek22 = Boolean.valueOf(gejalaTbl.getValueAt(21, 0).toString());
        if(cek22){
            g22 = gejalaTbl.getValueAt(21, 1).toString();
            if (!g22.equals("")){
                gejalanya++;
            } else {}
        } else {
            g22 = "";
        }
        Boolean cek23 = Boolean.valueOf(gejalaTbl.getValueAt(22, 0).toString());
        if(cek23){
            g23 = gejalaTbl.getValueAt(22, 1).toString();
            if (!g23.equals("")){
                gejalanya++;
            } else {}
        } else {
            g23 = "";
        }
        Boolean cek24 = Boolean.valueOf(gejalaTbl.getValueAt(23, 0).toString());
        if(cek24){
            g24 = gejalaTbl.getValueAt(23, 1).toString();
            if (!g24.equals("")){
                gejalanya++;
            } else {}
        } else {
            g24 = "";
        }
        Boolean cek25 = Boolean.valueOf(gejalaTbl.getValueAt(24, 0).toString());
        if(cek25){
            g25 = gejalaTbl.getValueAt(24, 1).toString();
            if (!g25.equals("")){
                gejalanya++;
            } else {}
        } else {
            g25 = "";
        }
        Boolean cek26 = Boolean.valueOf(gejalaTbl.getValueAt(25, 0).toString());
        if(cek26){
            g26 = gejalaTbl.getValueAt(25, 1).toString();
            if (!g26.equals("")){
                gejalanya++;
            } else {}
        } else {
            g26 = "";
        }
        Boolean cek27 = Boolean.valueOf(gejalaTbl.getValueAt(26, 0).toString());
        if(cek27){
            g27 = gejalaTbl.getValueAt(26, 1).toString();
            if (!g27.equals("")){
                gejalanya++;
            } else {}
        } else {
            g27 = "";
        }
        Boolean cek28 = Boolean.valueOf(gejalaTbl.getValueAt(27, 0).toString());
        if(cek28){
            g28 = gejalaTbl.getValueAt(27, 1).toString();
            if (!g28.equals("")){
                gejalanya++;
            } else {}
        } else {
            g28 = "";
        }
        Boolean cek29 = Boolean.valueOf(gejalaTbl.getValueAt(28, 0).toString());
        if(cek29){
            g29 = gejalaTbl.getValueAt(28, 1).toString();
            if (!g29.equals("")){
                gejalanya++;
            } else {}
        } else {
            g29 = "";
        }
        Boolean cek30 = Boolean.valueOf(gejalaTbl.getValueAt(29, 0).toString());
        if(cek30){
            g30 = gejalaTbl.getValueAt(29, 1).toString();
            if (!g30.equals("")){
                gejalanya++;
            } else {}
        } else {
            g30 = "";
        }
        Boolean cek31 = Boolean.valueOf(gejalaTbl.getValueAt(30, 0).toString());
        if(cek31){
            g31 = gejalaTbl.getValueAt(30, 1).toString();
            if (!g31.equals("")){
                gejalanya++;
            } else {}
        } else {
            g31 = "";
        }
        Boolean cek32 = Boolean.valueOf(gejalaTbl.getValueAt(31, 0).toString());
        if(cek32){
            g32 = gejalaTbl.getValueAt(31, 1).toString();
            if (!g32.equals("")){
                gejalanya++;
            } else {}
        } else {
            g32 = "";
        }
        Boolean cek33 = Boolean.valueOf(gejalaTbl.getValueAt(32, 0).toString());
        if(cek33){
            g33 = gejalaTbl.getValueAt(32, 1).toString();
            if (!g33.equals("")){
                gejalanya++;
            } else {}
        } else {
            g33 = "";
        }
        Boolean cek34 = Boolean.valueOf(gejalaTbl.getValueAt(33, 0).toString());
        if(cek34){
            g34 = gejalaTbl.getValueAt(33, 1).toString();
            if (!g34.equals("")){
                gejalanya++;
            } else {}
        } else {
            g34 = "";
        }
        Boolean cek35 = Boolean.valueOf(gejalaTbl.getValueAt(34, 0).toString());
        if(cek35){
            g35 = gejalaTbl.getValueAt(34, 1).toString();
            if (!g35.equals("")){
                gejalanya++;
            } else {}
        } else {
            g35 = "";
        }
        Boolean cek36 = Boolean.valueOf(gejalaTbl.getValueAt(35, 0).toString());
        if(cek36){
            g36 = gejalaTbl.getValueAt(35, 1).toString();
            if (!g36.equals("")){
                gejalanya++;
            } else {}
        } else {
            g36 = "";
        }
        Boolean cek37 = Boolean.valueOf(gejalaTbl.getValueAt(36, 0).toString());
        if(cek37){
            g37 = gejalaTbl.getValueAt(36, 1).toString();
            if (!g37.equals("")){
                gejalanya++;
            } else {}
        } else {
            g37 = "";
        }
        Boolean cek38 = Boolean.valueOf(gejalaTbl.getValueAt(37, 0).toString());
        if(cek38){
            g38 = gejalaTbl.getValueAt(37, 1).toString();
            if (!g38.equals("")){
                gejalanya++;
            } else {}
        } else {
            g38 = "";
        }
        Boolean cek39 = Boolean.valueOf(gejalaTbl.getValueAt(38, 0).toString());
        if(cek39){
            g39 = gejalaTbl.getValueAt(38, 1).toString();
            if (!g39.equals("")){
                gejalanya++;
            } else {}
        } else {
            g39 = "";
        }
        Boolean cek40 = Boolean.valueOf(gejalaTbl.getValueAt(39, 0).toString());
        if(cek40){
            g40 = gejalaTbl.getValueAt(39, 1).toString();
            if (!g40.equals("")){
                gejalanya++;
            } else {}
        } else {
            g40 = "";
        }
        Boolean cek41 = Boolean.valueOf(gejalaTbl.getValueAt(40, 0).toString());
        if(cek41){
            g41 = gejalaTbl.getValueAt(40, 1).toString();
            if (!g41.equals("")){
                gejalanya++;
            } else {}
        } else {
            g41 = "";
        }
        Boolean cek42 = Boolean.valueOf(gejalaTbl.getValueAt(41, 0).toString());
        if(cek42){
            g42 = gejalaTbl.getValueAt(41, 1).toString();
            if (!g42.equals("")){
                gejalanya++;
            } else {}
        } else {
            g42 = "";
        }
        Boolean cek43 = Boolean.valueOf(gejalaTbl.getValueAt(42, 0).toString());
        if(cek43){
            g43 = gejalaTbl.getValueAt(42, 1).toString();
            if (!g43.equals("")){
                gejalanya++;
            } else {}
        } else {
            g43 = "";
        }
        Boolean cek44 = Boolean.valueOf(gejalaTbl.getValueAt(43, 0).toString());
        if(cek44){
            g44 = gejalaTbl.getValueAt(43, 1).toString();
            if (!g44.equals("")){
                gejalanya++;
            } else {}
        } else {
            g44 = "";
        }
        Boolean cek45 = Boolean.valueOf(gejalaTbl.getValueAt(44, 0).toString());
        if(cek45){
            g45 = gejalaTbl.getValueAt(44, 1).toString();
            if (!g45.equals("")){
                gejalanya++;
            } else {}
        } else {
            g45 = "";
        }
        Boolean cek46 = Boolean.valueOf(gejalaTbl.getValueAt(45, 0).toString());
        if(cek46){
            g46 = gejalaTbl.getValueAt(45, 1).toString();
            if (!g46.equals("")){
                gejalanya++;
            } else {}
        } else {
            g46 = "";
        }
        Boolean cek47 = Boolean.valueOf(gejalaTbl.getValueAt(46, 0).toString());
        if(cek47){
            g47 = gejalaTbl.getValueAt(46, 1).toString();
            if (!g47.equals("")){
                gejalanya++;
            } else {}
        } else {
            g47 = "";
        }
        Boolean cek48 = Boolean.valueOf(gejalaTbl.getValueAt(47, 0).toString());
        if(cek48){
            g48 = gejalaTbl.getValueAt(47, 1).toString();
            if (!g48.equals("")){
                gejalanya++;
            } else {}
        } else {
            g48 = "";
        }
        Boolean cek49 = Boolean.valueOf(gejalaTbl.getValueAt(48, 0).toString());
        if(cek49){
            g49 = gejalaTbl.getValueAt(48, 1).toString();
            if (!g49.equals("")){
                gejalanya++;
            } else {}
        } else {
            g49 = "";
        }
        Boolean cek50 = Boolean.valueOf(gejalaTbl.getValueAt(49, 0).toString());
        if(cek50){
            g50 = gejalaTbl.getValueAt(49, 1).toString();
            if (!g50.equals("")){
                gejalanya++;
            } else {}
        } else {
            g50 = "";
        }
        
        try{
            java.sql.Connection conn = (java.sql.Connection)Koneksi_DB.getConnection();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet sql = stm.executeQuery("select kd_kerusakan as Kode_Kerusakan, Nama_Kerusakan, count(kd_kerusakan) as Gejala_Cocok, "
                    + "(select count(kd_gejala) from tb_kecocokan where kd_kerusakan=Kode_Kerusakan) as Total_Gejala, ("+gejalanya+") as Gejala_Dipilih, (select greatest(Total_Gejala, Gejala_Dipilih)) as Nilai_Pembagi "
                    + "from tb_kecocokan where kd_gejala in ('"+g1+"','"+g2+"','"+g3+"','"+g4+"','"+g5+"','"+g6+"','"+g7+"','"+g8+"','"+g9+"','"+g10+"',"
                    + "'"+g11+"','"+g12+"','"+g13+"','"+g14+"','"+g15+"','"+g16+"','"+g17+"','"+g18+"','"+g19+"','"+g20+"',"
                    + "'"+g21+"','"+g22+"','"+g23+"','"+g24+"','"+g25+"','"+g26+"','"+g27+"','"+g28+"','"+g29+"','"+g30+"',"
                    + "'"+g31+"','"+g32+"','"+g33+"','"+g34+"','"+g35+"','"+g36+"','"+g37+"','"+g38+"','"+g39+"','"+g40+"',"
                    + "'"+g41+"','"+g42+"','"+g43+"','"+g44+"','"+g45+"','"+g46+"','"+g47+"','"+g48+"','"+g49+"','"+g50+"') group by Kode_Kerusakan");
            while(sql.next()){
                sql.beforeFirst();
                diagnosaTbl.setModel(DbUtils.resultSetToTableModel(sql));
                model = (DefaultTableModel)diagnosaTbl.getModel();
                table = new JTable(model);
                model.addColumn("Kemiripan_Kasus");
                int rows = model.getRowCount();
                for(int row=0; row<rows; row++){
                    String jmla = String.valueOf(model.getValueAt(row, 2));
                    String pembagi = String.valueOf(model.getValueAt(row, 5));
                    Double h1 = Double.parseDouble(jmla);
                    Double h2 = Double.parseDouble(pembagi);
                    Double total = (h1/h2) * 100;
                    Double bulat = (double) Math.round(total * 100)/100;
                    String kemiripankasus = Double.toString(bulat);
                    String persen = ""+kemiripankasus+" %";
                    model.setValueAt(persen, row, 6);  
                }
            }
           
        } catch (Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Tidak dapat terhubung ke database. Pastikan Xampp sudah aktif!","Pemberitahuan",JOptionPane.INFORMATION_MESSAGE);  
        }
        
    }//GEN-LAST:event_diagnosaBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        // TODO add your handling code here:
        getDataGejala();
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void rincianBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rincianBtnActionPerformed
        // TODO add your handling code here:
        formrinci.kodeTxt.setText(kd_kerusakan);
        formrinci.namaTxt.setText(nama_kerusakan);
        formrinci.persenTxt.setText(persen);
        formrinci.deskripsiTxt.setText(deskripsi);
        formrinci.solusiTxt.setText(solusi);
        formrinci.setVisible(true);
    }//GEN-LAST:event_rincianBtnActionPerformed

    private void clearAllBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearAllBtnActionPerformed
        // TODO add your handling code here:
        getDataGejala();
        model = (DefaultTableModel)diagnosaTbl.getModel();
        model.setRowCount(0);
        kd_kerusakan = "";
        nama_kerusakan = "";
        deskripsi = "";
        solusi = "";
        persen = "";
        rinci();
    }//GEN-LAST:event_clearAllBtnActionPerformed

    private void diagnosaTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_diagnosaTblMouseClicked
        // TODO add your handling code here:
        try {
            int row = diagnosaTbl.getSelectedRow();
            String klik=(diagnosaTbl.getModel().getValueAt(row,0).toString());
            java.sql.Connection conn = (java.sql.Connection)Koneksi_DB.getConnection();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet sql = stm.executeQuery("SELECT * FROM tb_kerusakan WHERE kd_kerusakan='"+klik+"'");

            if (sql.next()) {
                kd_kerusakan = sql.getString("kd_kerusakan");
                nama_kerusakan = sql.getString("nama_kerusakan");
                deskripsi = sql.getString("deskripsi");
                solusi = sql.getString("solusi");
            }
        persen=(diagnosaTbl.getModel().getValueAt(row,6).toString());
        rinci();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Tidak dapat terhubung ke database. Pastikan Xampp sudah aktif!","Pemberitahuan",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_diagnosaTblMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form_Diagnosa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form_Diagnosa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form_Diagnosa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form_Diagnosa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Form_Diagnosa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearAllBtn;
    private javax.swing.JButton diagnosaBtn;
    private javax.swing.JTable diagnosaTbl;
    private javax.swing.JTable gejalaTbl;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton rincianBtn;
    // End of variables declaration//GEN-END:variables
}
